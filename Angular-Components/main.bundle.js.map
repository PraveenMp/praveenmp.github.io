{"version":3,"sources":["D:/Projects/angular-components/src async","D:/Projects/angular-components/src/app/app.component.css","D:/Projects/angular-components/src/app/app.component.html","D:/Projects/angular-components/src/app/app.component.ts","D:/Projects/angular-components/src/app/app.module.ts","D:/Projects/angular-components/src/app/app.routing.ts","D:/Projects/angular-components/src/app/pagination/pagination-component.html","D:/Projects/angular-components/src/app/pagination/pagination.component.ts","D:/Projects/angular-components/src/app/shared/components/pagenotfound.component.ts","D:/Projects/angular-components/src/app/shared/services/pagination.service.ts","D:/Projects/angular-components/src/app/shared/services/title.service.ts","D:/Projects/angular-components/src/app/title/title-component.html","D:/Projects/angular-components/src/app/title/title.component.ts","D:/Projects/angular-components/src/environments/environment.ts","D:/Projects/angular-components/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Projects/angular-components/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Projects/angular-components/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"header\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"header-title\\\">\\n          Angular Components\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n        <div class=\\\"github-logo\\\">\\n          <a href=\\\"https://praveenmp.github.io/\\\" title=\\\"https://praveenmp.github.io/\\\"><img alt=\\\"https://praveenmp.github.io/\\\" src=\\\"assets/github-logo.svg\\\"/> GITHUB</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <ul class=\\\"list-group\\\">\\n        <li class=\\\"list-group-item active\\\">Contents</li>\\n        <li class=\\\"list-group-item\\\"><a routerLink=\\\"/title\\\">Title</a></li>\\n        <li class=\\\"list-group-item\\\"><a routerLink=\\\"/pagination\\\">Pagination</a></li>\\n        <li class=\\\"list-group-item\\\"><a routerLink=\\\"/services\\\">Services</a></li>\\n        <li class=\\\"list-group-item\\\"><a routerLink=\\\"/other\\\">other</a></li>\\n      </ul>\\n    </div>\\n    <div class=\\\"col-md-10\\\">\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Projects/angular-components/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule  } from '@angular/http';\nimport { HighlightModule } from 'ngx-highlightjs';\n\nimport { AppComponent } from './app.component';\nimport { TitleComponent } from './title/title.component';\nimport { PaginationComponent } from './pagination/pagination.component';\n import { AppRouterModule } from './app.routing';\n import { TitleService } from 'app/shared/services/title.service';\n import { PagerService } from 'app/shared/services/pagination.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TitleComponent,\n    PaginationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRouterModule,\n    HttpModule,\n    HighlightModule.forRoot({ theme: 'monokai-sublime'})\n  ],\n  providers: [\n    TitleService,\n    PagerService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/app.module.ts","import { PaginationComponent } from './pagination/pagination.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TitleComponent } from './title/title.component';\r\nimport { PageNotFoundComponent } from './shared/components/pagenotfound.component';\r\n\r\nexport const appRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: TitleComponent\r\n    },\r\n    {\r\n        path: 'title',\r\n        component: TitleComponent\r\n    },\r\n    {\r\n      path: 'pagination',\r\n      component: PaginationComponent\r\n    },\r\n    {\r\n        path: '**',\r\n        component: PageNotFoundComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes)],\r\n    declarations: [\r\n        PageNotFoundComponent\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRouterModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/app.routing.ts","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Title\\r\\n  </div>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <h4 class=\\\"card-title\\\">Page/Module specific title in angular</h4>\\r\\n    <p class=\\\"card-text\\\">Steps</p>\\r\\n    <hr>\\r\\n    <p class=\\\"card-text\\\">npm install --save underscore@1.8.3</p>\\r\\n    <p class=\\\"card-text\\\">Step 1: Place pager service in your app</p>\\r\\n    <p class=\\\"card-text\\\">Step 2: Add pager serivce to your module as provider</p>\\r\\n    <p class=\\\"card-text\\\">Step 3: Declare Pagination service in your component </p>\\r\\n    <p class=\\\"card-text\\\">Step 4: Define pager objects and initialize setPage method </p>\\r\\n    <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#component\\\" role=\\\"tab\\\">OutPut</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#service\\\" role=\\\"tab\\\">Pager service.ts</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#module\\\" role=\\\"tab\\\">component.ts</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#index\\\" role=\\\"tab\\\">component.html</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <!-- Tab panes -->\\r\\n    <div class=\\\"tab-content\\\">\\r\\n      <div class=\\\"tab-pane active\\\" id=\\\"component\\\" role=\\\"tabpanel\\\">\\r\\n        <table class=\\\"table table-bordered\\\" style=\\\"margin:15px 0px;\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th>#</th>\\r\\n              <th>First name</th>\\r\\n              <th>Last name</th>\\r\\n              <th>Email</th>\\r\\n              <th>Gender</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let agent of pagedItems;let i=index\\\">\\r\\n              <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n              <td>{{agent.first_name}}</td>\\r\\n              <td>{{agent.last_name}}</td>\\r\\n              <td>{{agent.email}}</td>\\r\\n              <td>{{agent.gender}}</td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n        <nav aria-label=\\\"Page navigation example\\\">\\r\\n          <ul *ngIf=\\\"pager.pages && pager.pages.length\\\" class=\\\"pagination\\\">\\r\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\" class=\\\"page-item\\\">\\r\\n              <a (click)=\\\"setPage(1)\\\" class=\\\"page-link\\\">First</a>\\r\\n            </li>\\r\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === 1}\\\" class=\\\"page-item\\\">\\r\\n              <a (click)=\\\"setPage(pager.currentPage - 1)\\\" class=\\\"page-link\\\">Previous</a>\\r\\n            </li>\\r\\n            <li *ngFor=\\\"let page of pager.pages\\\" [ngClass]=\\\"{active:pager.currentPage === page}\\\" class=\\\"page-item\\\">\\r\\n              <a (click)=\\\"setPage(page)\\\" class=\\\"page-link\\\">{{page}}</a>\\r\\n            </li>\\r\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\" class=\\\"page-item\\\">\\r\\n              <a (click)=\\\"setPage(pager.currentPage + 1)\\\" class=\\\"page-link\\\">Next</a>\\r\\n            </li>\\r\\n            <li [ngClass]=\\\"{disabled:pager.currentPage === pager.totalPages}\\\" class=\\\"page-item\\\">\\r\\n              <a (click)=\\\"setPage(pager.totalPages)\\\" class=\\\"page-link\\\">Last</a>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </nav>\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane\\\" id=\\\"service\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"serviceCode\\\">\\r\\n         </code></pre>\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane\\\" id=\\\"module\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"componentTsCode\\\">\\r\\n\\r\\n        </code></pre>\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane\\\" id=\\\"index\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"componentHtmlCode\\\">\\r\\n\\r\\n    </code></pre>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Projects/angular-components/src/app/pagination/pagination-component.html\n// module id = ../../../../../src/app/pagination/pagination-component.html\n// module chunks = 1","import { TitleService } from './../shared/services/title.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n// Add Pagination service to your compoenent\r\nimport { PagerService } from './../shared/services/pagination.service';\r\nimport * as _ from 'underscore';\r\n\r\n@Component({\r\n  templateUrl: './pagination-component.html',\r\n})\r\n\r\nexport class PaginationComponent implements OnInit  {\r\npublic sampleJSon: any = [];\r\npublic serviceCode: any;\r\npublic componentTsCode: any;\r\npublic componentHtmlCode: any;\r\n// pager object\r\npager: any = {};\r\n// paged items\r\npagedItems: any[];\r\n\r\n  // consume the service\r\n  constructor(title: TitleService, private pagerService: PagerService) {\r\n    title.setTitle('Pagination');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sampleJSon = [{\r\n      'id': 1,\r\n      'first_name': 'Jeanette',\r\n      'last_name': 'Penddreth',\r\n      'email': 'jpenddreth0@census.gov',\r\n      'gender': 'Female',\r\n      'ip_address': '26.58.193.2'\r\n    }, {\r\n      'id': 2,\r\n      'first_name': 'Giavani',\r\n      'last_name': 'Frediani',\r\n      'email': 'gfrediani1@senate.gov',\r\n      'gender': 'Male',\r\n      'ip_address': '229.179.4.212'\r\n    }, {\r\n      'id': 3,\r\n      'first_name': 'Noell',\r\n      'last_name': 'Bea',\r\n      'email': 'nbea2@imageshack.us',\r\n      'gender': 'Female',\r\n      'ip_address': '180.66.162.255'\r\n    }, {\r\n      'id': 4,\r\n      'first_name': 'Willard',\r\n      'last_name': 'Valek',\r\n      'email': 'wvalek3@vk.com',\r\n      'gender': 'Male',\r\n      'ip_address': '67.76.188.26'\r\n    }]\r\n    this.setPage(1);\r\n    this.getAllCode();\r\n\r\n  }\r\n\r\n\r\n\r\n  setPage(page: number) {\r\n    if (page < 1 || page > this.pager.totalPages) {\r\n      return;\r\n    }\r\n\r\n    // get pager object from service\r\n    // Pass your json Object here in the example we have passed this.sampleJSon and count 3\r\n    this.pager = this.pagerService.getPager(this.sampleJSon.length, page, 3);\r\n\r\n    // get current page of items\r\n    this.pagedItems = this.sampleJSon.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n  }\r\n\r\n  public getAllCode() {\r\n    this.serviceCode = `  import { Injectable } from '@angular/core'\r\n    import * as _ from 'underscore';\r\n\r\n    @Injectable()\r\n    export class PagerService {\r\n        getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n            // calculate total pages\r\n            let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n            let startPage: number, endPage: number;\r\n\r\n            if (totalPages <= 10) {\r\n                // less than 10 total pages so show all\r\n                startPage = 1;\r\n                endPage = totalPages;\r\n            } else {\r\n                // more than 10 total pages so calculate start and end pages\r\n                if (currentPage <= 6) {\r\n                    startPage = 1;\r\n                    endPage = 10;\r\n                } else if (currentPage + 4 >= totalPages) {\r\n                    startPage = totalPages - 9;\r\n                    endPage = totalPages;\r\n                } else {\r\n                    startPage = currentPage - 5;\r\n                    endPage = currentPage + 4;\r\n                }\r\n            }\r\n\r\n            // calculate start and end item indexes\r\n            let startIndex = (currentPage - 1) * pageSize;\r\n            let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n            // create an array of pages to ng-repeat in the pager control\r\n            let pages = _.range(startPage, endPage + 1);\r\n\r\n            // return object with all pager properties required by the view\r\n            return {\r\n                totalItems: totalItems,\r\n                currentPage: currentPage,\r\n                pageSize: pageSize,\r\n                totalPages: totalPages,\r\n                startPage: startPage,\r\n                endPage: endPage,\r\n                startIndex: startIndex,\r\n                endIndex: endIndex,\r\n                pages: pages\r\n            };\r\n        }\r\n    }\r\n`;\r\n    this.componentTsCode = `\r\n    import { TitleService } from './../shared/services/title.service';\r\n    import { Component, OnInit } from '@angular/core';\r\n\r\n    // Add Pagination service to your compoenent\r\n    import { PagerService } from './../shared/services/pagination.service';\r\n    import * as _ from 'underscore';\r\n\r\n    @Component({\r\n      templateUrl: './pagination-component.html',\r\n    })\r\n\r\n    export class PaginationComponent implements OnInit  {\r\n    public sampleJSon: any = [];\r\n    // pager object\r\n    pager: any = {};\r\n    // paged items\r\n    pagedItems: any[];\r\n\r\n      // consume the service\r\n      constructor(title: TitleService, private pagerService: PagerService) {\r\n        title.setTitle('Pagination');\r\n      }\r\n\r\n      ngOnInit() {\r\n        this.sampleJSon = [{\r\n          'id': 1,\r\n          'first_name': 'Jeanette',\r\n          'last_name': 'Penddreth',\r\n          'email': 'jpenddreth0@census.gov',\r\n          'gender': 'Female',\r\n          'ip_address': '26.58.193.2'\r\n        }, {\r\n          'id': 2,\r\n          'first_name': 'Giavani',\r\n          'last_name': 'Frediani',\r\n          'email': 'gfrediani1@senate.gov',\r\n          'gender': 'Male',\r\n          'ip_address': '229.179.4.212'\r\n        }, {\r\n          'id': 3,\r\n          'first_name': 'Noell',\r\n          'last_name': 'Bea',\r\n          'email': 'nbea2@imageshack.us',\r\n          'gender': 'Female',\r\n          'ip_address': '180.66.162.255'\r\n        }, {\r\n          'id': 4,\r\n          'first_name': 'Willard',\r\n          'last_name': 'Valek',\r\n          'email': 'wvalek3@vk.com',\r\n          'gender': 'Male',\r\n          'ip_address': '67.76.188.26'\r\n        }]\r\n\r\n        // Don't forget to initialize pager method\r\n        this.setPage(1);\r\n      }\r\n\r\n\r\n\r\n      setPage(page: number) {\r\n        if (page < 1 || page > this.pager.totalPages) {\r\n          return;\r\n        }\r\n\r\n        // get pager object from service\r\n        // Pass your json Object here in the example we have passed this.sampleJSon and count 3\r\n        this.pager = this.pagerService.getPager(this.sampleJSon.length, page, 3);\r\n\r\n        // get current page of items\r\n        this.pagedItems = this.sampleJSon.slice(this.pager.startIndex, this.pager.endIndex + 1);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    `;\r\n    this.componentHtmlCode = `   <table class=\"table table-bordered\" style=\"margin:15px 0px;\">\r\n    <thead>\r\n        <tr>\r\n            <th>#</th>\r\n            <th>First name</th>\r\n            <th>Last name</th>\r\n            <th>Email</th>\r\n            <th>Gender</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody *ngIf=\"!errorMessage\">\r\n        <tr *ngFor=\"let agent of pagedItems;let i=index\">\r\n            <td>{{i+1}}</td>\r\n            <td>{{agent.first_name}}</td>\r\n            <td>{{agent.last_name}}</td>\r\n            <td>{{agent.email}}</td>\r\n            <td>{{agent.gender}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<nav aria-label=\"Page navigation example\">\r\n<ul *ngIf=\"pager.pages && pager.pages.length\" class=\"pagination\">\r\n    <li [ngClass]=\"{disabled:pager.currentPage === 1}\" class=\"page-item\">\r\n        <a (click)=\"setPage(1)\" class=\"page-link\">First</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:pager.currentPage === 1}\" class=\"page-item\">\r\n        <a (click)=\"setPage(pager.currentPage - 1)\" class=\"page-link\">Previous</a>\r\n    </li>\r\n    <li *ngFor=\"let page of pager.pages\" [ngClass]=\"{active:pager.currentPage === page}\" class=\"page-item\">\r\n        <a (click)=\"setPage(page)\" class=\"page-link\">{{page}}</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\" class=\"page-item\">\r\n        <a (click)=\"setPage(pager.currentPage + 1)\" class=\"page-link\">Next</a>\r\n    </li>\r\n    <li [ngClass]=\"{disabled:pager.currentPage === pager.totalPages}\" class=\"page-item\">\r\n        <a (click)=\"setPage(pager.totalPages)\" class=\"page-link\">Last</a>\r\n    </li>\r\n</ul>\r\n</nav>`;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/pagination/pagination.component.ts","\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    template: `<h1>Page Not Found 404</h1>`\r\n})\r\n\r\nexport class PageNotFoundComponent {\r\n    constructor() {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/shared/components/pagenotfound.component.ts","import { Injectable } from '@angular/core'\r\nimport * as _ from 'underscore';\r\n\r\n\r\n@Injectable()\r\nexport class PagerService {\r\n    getPager(totalItems: number, currentPage: number = 1, pageSize: number = 10) {\r\n        // calculate total pages\r\n        let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n        let startPage: number, endPage: number;\r\n\r\n        if (totalPages <= 10) {\r\n            // less than 10 total pages so show all\r\n            startPage = 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // more than 10 total pages so calculate start and end pages\r\n            if (currentPage <= 6) {\r\n                startPage = 1;\r\n                endPage = 10;\r\n            } else if (currentPage + 4 >= totalPages) {\r\n                startPage = totalPages - 9;\r\n                endPage = totalPages;\r\n            } else {\r\n                startPage = currentPage - 5;\r\n                endPage = currentPage + 4;\r\n            }\r\n        }\r\n\r\n        // calculate start and end item indexes\r\n        let startIndex = (currentPage - 1) * pageSize;\r\n        let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n        // create an array of pages to ng-repeat in the pager control\r\n        let pages = _.range(startPage, endPage + 1);\r\n\r\n        // return object with all pager properties required by the view\r\n        return {\r\n            totalItems: totalItems,\r\n            currentPage: currentPage,\r\n            pageSize: pageSize,\r\n            totalPages: totalPages,\r\n            startPage: startPage,\r\n            endPage: endPage,\r\n            startIndex: startIndex,\r\n            endIndex: endIndex,\r\n            pages: pages\r\n        };\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/shared/services/pagination.service.ts","import { Title } from '@angular/platform-browser';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TitleService {\r\n  private currentTitle: string;\r\n\r\n  constructor(private title: Title) {\r\n  }\r\n\r\n  public setTitle(val: string) {\r\n    this.currentTitle = 'Angular Components - ' + (val || '');\r\n    this.title.setTitle(this.currentTitle);\r\n  }\r\n\r\n  public getTitle() {\r\n    return this.currentTitle;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/shared/services/title.service.ts","module.exports = \"<div class=\\\"card\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Title\\r\\n  </div>\\r\\n  <div class=\\\"card-block\\\">\\r\\n    <h4 class=\\\"card-title\\\">Page/Module specific title in angular</h4>\\r\\n    <p class=\\\"card-text\\\">Steps</p>\\r\\n    <hr>\\r\\n    <p class=\\\"card-text\\\">Step 1: Create title service file</p>\\r\\n    <p class=\\\"card-text\\\">Step 2: Add title service in your module as a provider</p>\\r\\n    <p class=\\\"card-text\\\">Step 3: Consume title service in your component </p>\\r\\n    <p class=\\\"card-text\\\">Step 4: Using service pass the appropriate title </p>\\r\\n    <ul class=\\\"nav nav-tabs\\\" role=\\\"tablist\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#component\\\" role=\\\"tab\\\">Your component </a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#service\\\" role=\\\"tab\\\">Service</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#module\\\" role=\\\"tab\\\">Module</a>\\r\\n      </li>\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#index\\\" role=\\\"tab\\\">Index.html</a>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <!-- Tab panes -->\\r\\n    <div class=\\\"tab-content\\\">\\r\\n      <div class=\\\"tab-pane active\\\" id=\\\"component\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"componentCode\\\">\\r\\n      </code>\\r\\n    </pre>\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane\\\" id=\\\"service\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"serviceCode\\\">\\r\\n          </code>\\r\\n          </pre>\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane\\\" id=\\\"module\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"moduleCode\\\">\\r\\n\\r\\n          </code>\\r\\n          </pre>\\r\\n      </div>\\r\\n      <div class=\\\"tab-pane\\\" id=\\\"index\\\" role=\\\"tabpanel\\\">\\r\\n        <pre><code highlight [textContent]=\\\"indexCode\\\">\\r\\n          </code>\\r\\n          </pre>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/Projects/angular-components/src/app/title/title-component.html\n// module id = ../../../../../src/app/title/title-component.html\n// module chunks = 1","import { TitleService } from './../shared/services/title.service';\r\nimport { Component,OnInit } from '@angular/core';\r\n@Component({\r\n  templateUrl: './title-component.html',\r\n})\r\n\r\nexport class TitleComponent implements OnInit  {\r\npublic componentCode: any;\r\npublic serviceCode: any;\r\npublic moduleCode: any;\r\npublic indexCode: any;\r\n  constructor(title: TitleService) {\r\n    title.setTitle('How to set page specific title in Angular');\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.componentCode = `\r\n    import { TitleService } from './../shared/services/title.serives';\r\n    import { Component } from '@angular/core';\r\n\r\n      @Component({\r\n        templateUrl: './some-componet.html',\r\n      })\r\n\r\n      export class SomeComponent  {\r\n\r\n        constructor(title: TitleService) {\r\n          title.setTitle('Set page specific title in Angular');\r\n        }\r\n\r\n      }`;\r\n      this.serviceCode = `\r\n      import { Title } from '@angular/platform-browser';\r\n      import { Injectable } from '@angular/core';\r\n\r\n      @Injectable()\r\n      export class TitleService {\r\n        private currentTitle: string;\r\n\r\n        constructor(private title: Title) {\r\n        }\r\n\r\n        public setTitle(val: string) {\r\n          this.currentTitle = 'Angular Components - ' + (val || '');\r\n          this.title.setTitle(this.currentTitle);\r\n        }\r\n\r\n        public getTitle() {\r\n          return this.currentTitle;\r\n        }\r\n      }`;\r\n      this.moduleCode = `\r\n      import { BrowserModule } from '@angular/platform-browser';\r\n      import { NgModule } from '@angular/core';\r\n\r\n      import { AppComponent } from './app.component';\r\n      import { TitleComponent } from './title/title.component';\r\n\r\n      import { AppRouterModule } from './app.routing';\r\n      import { TitleService } from 'app/shared/services/title.serives';\r\n\r\n      @NgModule({\r\n        declarations: [\r\n          AppComponent,\r\n          TitleComponent\r\n        ],\r\n        imports: [\r\n          BrowserModule,\r\n          AppRouterModule,\r\n\r\n        ],\r\n        providers: [TitleService],\r\n        bootstrap: [AppComponent]\r\n      })\r\n      export class AppModule {\r\n\r\n      }`;\r\n\r\n      this.indexCode = `<!doctype html>\r\n      <html lang=\"en\">\r\n      <head>\r\n        <meta charset=\"utf-8\">\r\n        <title>Angular Components</title>\r\n        <base href=\"/\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n      </head>\r\n      <body>\r\n        <app-root></app-root>\r\n      </body>\r\n      </html>\r\n     `;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/app/title/title.component.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// D:/Projects/angular-components/src/main.ts"],"sourceRoot":"webpack:///"}