{"version":3,"sources":["logo.svg","environment/dev.js","constants/constants.js","constants/category.js","components/dashboard/monthly-report-donutchart.js","components/dashboard/monthly-stats.js","components/dashboard/yearly-report-barchart.js","components/dashboard/yearly-stats.js","pages/dashboard.js","components/transaction-records/all-records.js","components/transaction-records/income-record.js","components/transaction-records/investment-record.js","components/transaction-records/expense-record.js","components/transaction-records/add-records.js","pages/expenses.js","pages/todo.js","components/sidebar/sidebar.js","components/header/header.js","layouts/login.js","layouts/user.js","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","currentYear","localStorage","getItem","Date","getFullYear","currentMonth","getMonth","getTransactionsURL","getCurrentMonthTransactions","years","months","transactionType","incomeList","investmentList","mainCategory","expenseList","MonthlyReportDonutChart","month","data","optionsTemp","chart","type","labels","responsive","breakpoint","options","width","legend","position","useState","setOptions","series","setSeries","useEffect","Object","keys","map","e","push","length","expenseData","filter","getTransactionsDetails","objNew","forEach","t","category","amount","className","id","MonthlyStats","totalIncomeYear","totalExpenseYear","totalInvestmentYear","transactionDetails","setTransactionDetails","prevState","incomeYear","expenseYear","investmentYear","Income","Expense","thousandSeparator","displayType","thousandsGroupStyle","prefix","value","YearlyReportBarChart","year","seriesTemp","name","dm","console","log","gm","transactionDate","income","expense","Investment","investment","newObj","d","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","stroke","show","colors","xaxis","categories","yaxis","title","text","fill","opacity","tooltip","y","formatter","val","toLocaleString","YearlyStats","Dashboard","setYear","Number","setMonth","yearData","setYearData","monthData","setMonthData","getMonthlyTransactionsDetails","axios","get","then","response","catch","error","onChange","target","onYearChange","selected","onMonthChange","i","TransactionRecords","setParentCounter","deleteTransaction","transactionList","setTransactionList","transaction","subCategory","comments","onClick","_id","IncomeRecords","InvestmentRecords","ExpenseRecords","AddRecords","updateRecord","deleteRecord","updateTransactionList","useForm","register","handleSubmit","reset","setSubCategory","investemntSubCategory","setInvestemntSubCategory","incomeType","setIncomeType","expenseType","setExpenseType","investmentType","setInvestmentType","updateSubcategory","key","updateInvestmentSubcategory","onTransactionType","split","onDeleteRecord","delete","Math","random","onSubmit","JSON","stringify","put","userId","post","for","required","placeholder","tabindex","Expenses","parentCounter","setDeleteRecord","someKey","setSomeKey","monthName","all","showTabs","setShowTabs","showRecords","Todo","Sidebar","user","sideBarShow","setsideBarShow","class","to","activeClassName","exact","path","component","render","Header","history","useHistory","username","removeItem","Login","signIn","setSignIn","errors","formState","setError","style","setItem","email","firstName","lastName","setTimeout","pattern","maxLength","minLength","password","User","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9383425d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const BASE_URL = \"https://one-note-mp.herokuapp.com/mynote\"; \r\nexport const TRANSACTION_URL = BASE_URL + \"/transaction/\" + localStorage.getItem(\"userId\");","\r\nimport { BASE_URL } from '../environment/dev';\r\n\r\nconst currentYear = new Date().getFullYear();\r\nconst currentMonth = new Date().getMonth();\r\nconst getTransactionsURL = BASE_URL + \"/transaction/by/\";\r\nconst getCurrentMonthTransactions = BASE_URL + \"/transaction/by/\";\r\nconst years = [2020,2021,2022,2023,2024,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2035,2036,2037,2038,2039,2040,2041,2042,2043,2044,2045,2046,2047,2048,2049,2050,2051,2052,2053,2054,2055,2056,2057,2058,2059,2060,2061,2062,2063,2064,2065,2066,2067,2068,2069,2070,2071,2072,2073,2074,2075,2076,2077,2078,2079,2080,2081,2082,2083,2084,2085,2086,2087,2088,2089,2090,2091,2092,2093,2094,2095,2096,2097,2098,2099];\r\nconst months = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\r\nconst monthWiseData = [{\r\n    \"month\": 0,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 1,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 2,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 3,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 4,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 5,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 6,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 7,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  },\r\n  {\r\n    \"month\": 8,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  }\r\n  ,\r\n  {\r\n    \"month\": 9,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  }\r\n  ,\r\n  {\r\n    \"month\": 10,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  }\r\n  ,\r\n  {\r\n    \"month\": 11,\r\n    \"income\":0,\r\n    \"expense\":0,\r\n    \"investment\":0,\r\n  }\r\n]\r\n\r\nexport { currentYear, getTransactionsURL, getCurrentMonthTransactions, years, months, currentMonth,monthWiseData}","export const transactionType = {\r\n    \"Income\": \"income\",\r\n    \"Expense\": \"expense\",\r\n    \"Investment\": \"investment\"\r\n}\r\n\r\nexport const incomeList = [\r\n    \"Salary\",\r\n    \"Dividends\",\r\n    \"Capital Interest\",\r\n    \"Freelancing\",\r\n    \"Other\"\r\n]\r\n\r\nexport const investmentList = {\r\n    \"MutualFund\": [\"ELSS\", \"Equity\", \"Debt\", \"Hybrid\"],\r\n    \"Stocks\": [\"Large-cap\", \"Mid-cap\", \"Small-cap\"],\r\n    \"Chiti\": [\"Tvk-Home\"],\r\n    \"PPF\": [\"HDFC\"]\r\n}\r\n\r\nexport const mainCategory = {\r\n    \"Petrol\": \"Petrol\",\r\n    \"Loan\": \"Loan\",\r\n    \"Rent\": \"Rent\",\r\n    \"Shopping\": \"Shopping\",\r\n    \"Subscriptions\":\"Subscriptions\",\r\n    \"Utilities\":\"Utilities\",\r\n    \"Home\":\"Home\"\r\n}\r\n\r\nexport const expenseList = {\r\n    \"Petrol\": [\r\n        \"Bike\",\r\n        \"Car\"\r\n    ],\r\n    \"Loan\": [\r\n        \"Car\",\r\n        \"Personal\",\r\n        \"Credit Card\",\r\n        \"Friends\"\r\n    ],\r\n    \"Rent\": [\r\n        \"Bangalore-Home\"\r\n    ],\r\n    \"Shopping\": [\r\n        \"Groceries/Home\",\r\n        \"Clothes\",\r\n        \"Electronics\",\r\n        \"Other\"\r\n    ],\r\n    \"Subscriptions\": [\r\n        \"Netflix\",\r\n        \"Amazon\",\r\n        \"Tv\",\r\n        \"Mobile\"\r\n    ],\r\n    \"Utilities\": [\r\n        \"Power-Bill\",\r\n        \"Internet-Bill\"\r\n    ],\r\n    \"Home\": [\r\n        \"Tvk-Home\"\r\n    ]\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Chart from 'react-apexcharts';\r\nimport { months } from '../../constants/constants';\r\nimport { expenseList, mainCategory, transactionType } from './../../constants/category';\r\n\r\n\r\nexport const MonthlyReportDonutChart = ({ month, data }) => {\r\n    let series1 = [0,0,0,0,0,0,0];\r\n\r\n    const optionsTemp = {\r\n        chart: {\r\n            type: 'donut',\r\n        },\r\n        labels: [],\r\n        responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n                chart: {\r\n                    width: 300\r\n                },\r\n                legend: {\r\n                    position: 'bottom'\r\n                }\r\n            }\r\n        }]\r\n    };\r\n    const [options, setOptions] = useState(optionsTemp);\r\n    const [series, setSeries] = useState([1,1,1,1,1,1,1]);\r\n\r\n    useEffect(() => {\r\n        Object.keys(expenseList).map(e => optionsTemp.labels.push(e));\r\n        setOptions(optionsTemp);\r\n\r\n        if (data.length > 0) {\r\n            let expenseData = data.filter((e) => { return e.transactionType === \"expense\" } );\r\n            if(expenseData && expenseData.length > 0) {\r\n            getTransactionsDetails(expenseData);\r\n            } else {\r\n                setSeries([1,1,1,1,1,1,1]);\r\n                setOptions(optionsTemp);\r\n            }\r\n        } else {\r\n            setSeries([1,1,1,1,1,1,1]);\r\n            setOptions(optionsTemp);\r\n        }\r\n    }, [data]);\r\n\r\n    const getTransactionsDetails = (data) => {\r\n        let objNew = [1,1,1,1,1,1,1];\r\n        data?.forEach((t) => {\r\n            switch (t.category) {\r\n                case mainCategory.Petrol:\r\n                    objNew[0] += t.amount;\r\n                    break;\r\n                case mainCategory.Loan:\r\n                    objNew[1] += t.amount;\r\n                    break;\r\n                case mainCategory.Rent:\r\n                    objNew[2] += t.amount;\r\n                    break;\r\n                case mainCategory.Shopping:\r\n                    objNew[3] += t.amount;\r\n                    break;\r\n                case mainCategory.Subscriptions:\r\n                    objNew[4] += t.amount;\r\n                    break;\r\n                case mainCategory.Utilities:\r\n                    objNew[5] += t.amount;\r\n                    break;\r\n                case mainCategory.Home:\r\n                    objNew[6] += t.amount;\r\n                    break;\r\n                default: break;\r\n            }\r\n        });\r\n\r\n        series1 = objNew;\r\n        setSeries(series1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"col bg-white\">\r\n            <div> <h6 className=\"pt-3 pb-2\">Spending Analytics - {months[month - 1]}</h6></div>\r\n            <div id=\"chart\">\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"donut\"\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\nimport { transactionType } from '../../constants/category';\r\nimport {months } from '../../constants/constants';\r\n\r\nexport const MonthlyStats = ({month,data}) => {\r\n    const [transactionDetails, setTransactionDetails] = useState({\r\n        totalIncomeYear: 0,\r\n        totalExpenseYear: 0,\r\n        totalInvestmentYear: 0,\r\n    })\r\n    useEffect(() => {\r\n        if(data.length > 0) {\r\n          getTransactionsDetails(data);\r\n        } else {\r\n            setTransactionDetails((prevState) => ({...prevState,\r\n                    totalIncomeYear: 0,\r\n                    totalExpenseYear: 0,\r\n                    totalInvestmentYear: 0,\r\n            }))\r\n        }\r\n    }, [data]);\r\n\r\n  \r\n\r\n    const getTransactionsDetails = (data) => {\r\n        let incomeYear = 0, expenseYear = 0, investmentYear = 0;\r\n        if(data) {\r\n        data?.forEach((t) => {\r\n            if(t.transactionType === transactionType.Income) {\r\n                incomeYear +=  t.amount;\r\n            } else if(t.transactionType === transactionType.Expense) {\r\n                expenseYear +=  t.amount;\r\n            } else {\r\n                investmentYear += t.amount;\r\n            }\r\n        });\r\n        setTransactionDetails((prevState) => ({\r\n            ...prevState,\r\n            totalIncomeYear:incomeYear,\r\n            totalExpenseYear:expenseYear,\r\n            totalInvestmentYear:investmentYear\r\n        }));\r\n    }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-12 d-flex mt-4 mb-2\">\r\n                <div> <h5>Monthly Report - {months[month-1]}</h5></div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-1 overflow-hidden\">\r\n                                <p className=\"text-truncate font-size-14 mb-2\">  <i className=\"bi bi-wallet2 c-income font-size-21\"></i> Income</p>\r\n                                <h4 className=\"mb-0\">\r\n                                    <NumberFormat thousandSeparator={true} displayType={'text'} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={transactionDetails.totalIncomeYear} />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"text-primary ms-auto\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-1 overflow-hidden\">\r\n                                <p className=\"text-truncate font-size-14 mb-2\"><i className=\"bi bi-graph-up font-size-21 c-expense\"></i> Expense</p>\r\n                                <h4 className=\"mb-0\">\r\n                                    <NumberFormat thousandSeparator={true} displayType={'text'} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={transactionDetails.totalExpenseYear} /></h4>\r\n                            </div>\r\n                            <div className=\"text-primary ms-auto\">\r\n                                <i className=\"ri-stack-line font-size-24\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-1 overflow-hidden\">\r\n                                <p className=\"text-truncate font-size-14 mb-2\"> <i className=\"bi bi-cloud-hail-fill font-size-21 c-investment\"></i> Investments</p>\r\n                                <h4 className=\"mb-0\">\r\n                                    <NumberFormat thousandSeparator={true} displayType={'text'} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={transactionDetails.totalInvestmentYear} />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"text-primary ms-auto\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport { monthWiseData } from '../../constants/constants';\r\nimport { transactionType } from './../../constants/category';\r\n\r\nexport const YearlyReportBarChart = ({ year, data }) => {\r\n    const [monthWiseReport, setMonthWiseReport] = useState([])\r\n    const seriesTemp = [{\r\n        name: 'Income',\r\n        data: []\r\n    }, {\r\n        name: 'Expense',\r\n        data: []\r\n    }, {\r\n        name: 'Investment',\r\n        data: []\r\n    }];\r\n\r\n    const [series, setSeries] = useState(seriesTemp);\r\n    let dm = [];\r\n\r\n    const options = {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded'\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            show: true,\r\n            width: 2,\r\n            colors: ['transparent']\r\n        },\r\n        xaxis: {\r\n            categories: ['jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'nov', 'dec'],\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: '₹ (thousands)'\r\n            }\r\n        },\r\n        fill: {\r\n            opacity: 1\r\n        },\r\n        tooltip: {\r\n            y: {\r\n                formatter: function (val) {\r\n                    return \"₹\" + val.toLocaleString('en-IN');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(series);\r\n        dm = [{\r\n            \"month\": 0,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 1,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 2,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 3,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 4,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 5,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 6,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 7,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        },\r\n        {\r\n            \"month\": 8,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        }\r\n            ,\r\n        {\r\n            \"month\": 9,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        }\r\n            ,\r\n        {\r\n            \"month\": 10,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        }\r\n            ,\r\n        {\r\n            \"month\": 11,\r\n            \"income\": 0,\r\n            \"expense\": 0,\r\n            \"investment\": 0,\r\n        }\r\n        ];\r\n        if(data.length > 0){\r\n            getTransactionsDetails(data);\r\n        } else {\r\n            setSeries([]);\r\n        }\r\n    }, [data])\r\n\r\n    const getTransactionsDetails = (data) => {\r\n        let gm;\r\n        data?.forEach((t) => {\r\n            gm = new Date(t.transactionDate).getMonth();\r\n\r\n            if (t.transactionType === transactionType.Income) {\r\n                dm[gm].income += t.amount;\r\n            } else if (t.transactionType === transactionType.Expense) {\r\n                dm[gm].expense += t.amount;\r\n            } else if (t.transactionType === transactionType.Investment) {\r\n                dm[gm].investment += t.amount;\r\n            }\r\n        });\r\n        let newObj = seriesTemp;\r\n        dm.forEach((d) => {\r\n            newObj[0].data.push(d['income']);\r\n            newObj[1].data.push(d['expense']);\r\n            newObj[2].data.push(d['investment']);\r\n        });\r\n        setSeries(newObj);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"col mt-4\">\r\n            <div className=\"bg-white\">\r\n            <div> <h6 className=\"pt-3 pb-2 pl-2\">Month-wise analytics for the - {year}</h6></div>\r\n            <div id=\"chart\" className=\"\">\r\n                <Chart\r\n                    options={options}\r\n                    series={series}\r\n                    type=\"bar\"\r\n                    width=\"100%\"\r\n                    height=\"400\"\r\n                />\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport NumberFormat from 'react-number-format';\r\nimport { transactionType } from '../../constants/category';\r\n\r\nexport const YearlyStats = ({year,data}) => {\r\n    const [transactionDetails, setTransactionDetails] = useState({\r\n        totalIncomeYear: 0,\r\n        totalExpenseYear: 0,\r\n        totalInvestmentYear: 0,\r\n    })\r\n    useEffect(() => {\r\n        if(data.length > 0) {\r\n        getTransactionsDetails(data);\r\n        } else {\r\n            setTransactionDetails((prevState) => ({...prevState,\r\n                    totalIncomeYear: 0,\r\n                    totalExpenseYear: 0,\r\n                    totalInvestmentYear: 0,\r\n            }))\r\n        }\r\n    }, [data])\r\n\r\n\r\n\r\n    const getTransactionsDetails = (data) => {\r\n        let incomeYear = 0, expenseYear = 0, investmentYear = 0;\r\n        data?.forEach((t) => {\r\n            if(t.transactionType === transactionType.Income) {\r\n                incomeYear +=  t.amount;\r\n            } else if(t.transactionType === transactionType.Expense) {\r\n                expenseYear +=  t.amount;\r\n            } else {\r\n                investmentYear += t.amount;\r\n            }\r\n        });\r\n        setTransactionDetails((prevState) => ({\r\n            ...prevState,\r\n            totalIncomeYear:incomeYear,\r\n            totalExpenseYear:expenseYear,\r\n            totalInvestmentYear:investmentYear\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n             <div className=\"col-md-12 d-flex mb-2\">\r\n                <div> <h5>Yearly Report - {year}</h5></div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-1 overflow-hidden\">\r\n                                <p className=\"text-truncate font-size-14 mb-2\">  <i className=\"bi bi-wallet2 c-income font-size-21\"></i> Income</p>\r\n                                <h4 className=\"mb-0\">\r\n                                    <NumberFormat thousandSeparator={true} displayType={'text'} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={transactionDetails.totalIncomeYear} />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"text-primary ms-auto\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-1 overflow-hidden\">\r\n                                <p className=\"text-truncate font-size-14 mb-2\"><i className=\"bi bi-graph-up font-size-21 c-expense\"></i> Expense</p>\r\n                                <h4 className=\"mb-0\">\r\n                                    <NumberFormat thousandSeparator={true} displayType={'text'} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={transactionDetails.totalExpenseYear} /></h4>\r\n                            </div>\r\n                            <div className=\"text-primary ms-auto\">\r\n                                <i className=\"ri-stack-line font-size-24\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4 mb-3\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"flex-1 overflow-hidden\">\r\n                                <p className=\"text-truncate font-size-14 mb-2\"> <i className=\"bi bi-cloud-hail-fill font-size-21 c-investment\"></i> Investments</p>\r\n                                <h4 className=\"mb-0\">\r\n                                    <NumberFormat thousandSeparator={true} displayType={'text'} thousandsGroupStyle=\"lakh\" prefix={'₹'} value={transactionDetails.totalInvestmentYear} />\r\n                                </h4>\r\n                            </div>\r\n                            <div className=\"text-primary ms-auto\">\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport { MonthlyReportDonutChart } from '../components/dashboard/monthly-report-donutchart';\r\nimport { MonthlyStats } from '../components/dashboard/monthly-stats';\r\nimport { YearlyReportBarChart } from '../components/dashboard/yearly-report-barchart';\r\nimport { YearlyStats } from '../components/dashboard/yearly-stats';\r\nimport { currentMonth, currentYear, getTransactionsURL, months, years } from '../constants/constants';\r\nimport  axios from 'axios';\r\n\r\n\r\nexport const Dashboard = () => {\r\n    const [year, setYear] = useState(currentYear);\r\n    const [month, setMonth] = useState(Number(currentMonth + 1));\r\n    const [yearData, setYearData] = useState([]);\r\n    const [monthData, setMonthData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getMonthlyTransactionsDetails(month,year);\r\n        getTransactionsDetails(year);\r\n    }, [])\r\n\r\n    const onYearChange = (e) => {\r\n        setYear(e.target.value);\r\n        getTransactionsDetails(e.target.value);\r\n        getMonthlyTransactionsDetails(month,e.target.value);\r\n    }\r\n\r\n    const onMonthChange = (e) => {\r\n        setMonth(Number(e.target.value)+1);\r\n        getMonthlyTransactionsDetails(Number(e.target.value)+1,year);\r\n      \r\n    }\r\n\r\n    const getTransactionsDetails = (year) => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n        axios.get(getTransactionsURL+ localStorage.getItem('userId')+\"/\" + year)\r\n        .then(function(response){\r\n            setYearData(response.data);\r\n        }).catch(function(error){\r\n            console.log(\"Transaction failed = \"+error)\r\n        })\r\n    }\r\n    }\r\n\r\n    const getMonthlyTransactionsDetails = (month,year) => {\r\n        if(localStorage.getItem(\"userId\")) {\r\n        axios.get(getTransactionsURL+ localStorage.getItem('userId')+\"/\"+ year + \"/\"+ month)\r\n        .then(function(response){\r\n            setMonthData(response.data);\r\n            // setMonth(month);\r\n        }).catch(function(error){\r\n            console.log(\"Transaction failed = \"+error)\r\n        })\r\n    }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-12 d-flex mt-4\">\r\n                    <h5>Report : </h5>\r\n                        <div className=\"ml-2\">\r\n                            <select onChange={(e) => onYearChange(e)}>\r\n                                {\r\n                                    years.map((year) => <option value={year} selected={year === currentYear}>{year}</option>)\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"ml-2\">\r\n                            <select onChange={(e) => onMonthChange(e)}>\r\n                                {\r\n                                    months.map((month, i) => <option value={i} selected={month === months[currentMonth]}>{month}</option>)\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                </div>\r\n                <div className=\"col-xl-8\">\r\n                    <div className=\"row mt-4\">\r\n                        <YearlyStats key={year} year={year} data={yearData}></YearlyStats>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <MonthlyStats key={month} month={month} data={monthData}></MonthlyStats>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                         <YearlyReportBarChart key={year} year={year} data={yearData}></YearlyReportBarChart>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-xl-4 mb-3 pb-3\">\r\n                 <MonthlyReportDonutChart month={month} data={monthData}></MonthlyReportDonutChart>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport  axios from 'axios';\r\nimport { getCurrentMonthTransactions } from './../../constants/constants';\r\n\r\nexport const TransactionRecords = ({setParentCounter, deleteTransaction}) => {\r\n    const [transactionList, setTransactionList] = useState([]);\r\n    \r\n    \r\n    useEffect(() => {\r\n        axios.get(getCurrentMonthTransactions + localStorage.getItem('userId') + \"/\" + new Date().getFullYear()  + \"/\" + (new Date().getMonth() + 1))\r\n        .then(function(response){\r\n            setTransactionList(response.data);\r\n        }).catch(function(error){\r\n            console.log(\"Transaction failed = \"+error)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table mt-4\">\r\n         <thead>\r\n             <tr className=\"thead-light\">\r\n                 <th>Transaction Type</th>\r\n                 <th>Category</th>\r\n                 <th>SubCategory</th>\r\n                 <th>Amount</th>\r\n                 <th>Date</th>\r\n                 <th>Comments</th>\r\n                 <th>Actions</th>\r\n             </tr>\r\n         </thead>\r\n         <tbody>\r\n             {transactionList && transactionList.map((transaction) => \r\n                 <tr key={transaction._id} \r\n                 className={(transaction.transactionType === \"investment\" ? \"table-success-c\": \r\n                 (transaction.transactionType === \"income\" ? \"table-primary-c\":\"table-danger-c\")\r\n                 )}>\r\n                     <td>{transaction.transactionType}</td>\r\n                     <td>{transaction.category}</td>\r\n                     <td>{transaction.subCategory}</td>\r\n                     <td>{transaction.amount}</td>\r\n                     <td>{transaction.transactionDate}</td>\r\n                     <td>{transaction.comments}</td>\r\n                     <td> <span className=\"cp pr-1\" title=\"Edit\" onClick={() => setParentCounter(transaction)}><i className=\"bi bi-pencil-square\"></i> Edit</span>\r\n                      <span className=\"text-danger ml-2 cp\" title=\"Delete\" onClick={() => deleteTransaction(transaction)} > <i className=\"bi bi-trash\"></i> Delete</span></td>\r\n                 </tr>\r\n             )}\r\n\r\n         </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport  axios from 'axios';\r\nimport { getCurrentMonthTransactions } from './../../constants/constants';\r\n\r\nexport const IncomeRecords = () => {\r\n    const [transactionList, setTransactionList] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios.get(getCurrentMonthTransactions + localStorage.getItem('userId') + \"/\" + new Date().getFullYear()  + \"/\" + (new Date().getMonth() + 1) +\"/income\")\r\n        .then(function(response){\r\n            setTransactionList(response.data);\r\n        }).catch(function(error){\r\n            console.log(\"Transaction failed = \"+error)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n         <thead>\r\n             <tr>\r\n                 <th>Transaction Type</th>\r\n                 <th>Category</th>\r\n                 <th>SubCategory</th>\r\n                 <th>Amount</th>\r\n                 <th>Date</th>\r\n                 <th>Comments</th>\r\n             </tr>\r\n         </thead>\r\n         <tbody>\r\n             {transactionList && transactionList.map((transaction) => \r\n                 <tr key={transaction._id}>\r\n                     <td>{transaction.transactionType}</td>\r\n                     <td>{transaction.category}</td>\r\n                     <td>{transaction.subCategory}</td>\r\n                     <td>{transaction.amount}</td>\r\n                     <td>{transaction.transactionDate}</td>\r\n                     <td>{transaction.comments}</td>\r\n                 </tr>\r\n             )}\r\n\r\n         </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport  axios from 'axios';\r\nimport { getCurrentMonthTransactions } from './../../constants/constants';\r\n\r\nexport const InvestmentRecords = () => {\r\n    const [transactionList, setTransactionList] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios.get(getCurrentMonthTransactions + localStorage.getItem('userId') + \"/\" + new Date().getFullYear()  + \"/\" + (new Date().getMonth() + 1) +\"/investment\")\r\n        .then(function(response){\r\n            setTransactionList(response.data);\r\n        }).catch(function(error){\r\n            console.log(\"Transaction failed = \"+error)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n         <thead>\r\n             <tr>\r\n                 <th>Transaction Type</th>\r\n                 <th>Category</th>\r\n                 <th>SubCategory</th>\r\n                 <th>Amount</th>\r\n                 <th>Date</th>\r\n                 <th>Comments</th>\r\n             </tr>\r\n         </thead>\r\n         <tbody>\r\n             {transactionList && transactionList.map((transaction) => \r\n                 <tr key={transaction._id}>\r\n                     <td>{transaction.transactionType}</td>\r\n                     <td>{transaction.category}</td>\r\n                     <td>{transaction.subCategory}</td>\r\n                     <td>{transaction.amount}</td>\r\n                     <td>{transaction.transactionDate}</td>\r\n                     <td>{transaction.comments}</td>\r\n                 </tr>\r\n             )}\r\n\r\n         </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport  axios from 'axios';\r\nimport { getCurrentMonthTransactions } from './../../constants/constants';\r\n\r\nexport const ExpenseRecords = () => {\r\n    const [transactionList, setTransactionList] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        axios.get(getCurrentMonthTransactions + localStorage.getItem('userId') + \"/\" + new Date().getFullYear()  + \"/\" + (new Date().getMonth() + 1) +\"/expense\")\r\n        .then(function(response){\r\n            setTransactionList(response.data);\r\n        }).catch(function(error){\r\n            console.log(\"Transaction failed = \"+error)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n         <thead>\r\n             <tr>\r\n                 <th>Transaction Type</th>\r\n                 <th>Category</th>\r\n                 <th>SubCategory</th>\r\n                 <th>Amount</th>\r\n                 <th>Date</th>\r\n                 <th>Comments</th>\r\n             </tr>\r\n         </thead>\r\n         <tbody>\r\n             {transactionList && transactionList.map((transaction) => \r\n                 <tr key={transaction._id}>\r\n                     <td>{transaction.transactionType}</td>\r\n                     <td>{transaction.category}</td>\r\n                     <td>{transaction.subCategory}</td>\r\n                     <td>{transaction.amount}</td>\r\n                     <td>{transaction.transactionDate}</td>\r\n                     <td>{transaction.comments}</td>\r\n                 </tr>\r\n             )}\r\n\r\n         </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { expenseList, incomeList, transactionType, investmentList } from \"../../constants/category\"\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport { BASE_URL } from '../../environment/dev';\r\n\r\nexport const AddRecords = ({ updateRecord, deleteRecord, updateTransactionList }) => {\r\n    const { register, handleSubmit, reset } = useForm();\r\n\r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [investemntSubCategory, setInvestemntSubCategory] = useState([]);\r\n    const [incomeType, setIncomeType] = useState(true);\r\n    const [expenseType, setExpenseType] = useState(false);\r\n    const [investmentType, setInvestmentType] = useState(false);\r\n\r\n    const updateSubcategory = (val) => {\r\n        Object.keys(expenseList).forEach(key => {\r\n            if (key === val) {\r\n                setSubCategory(expenseList[key])\r\n            }\r\n        });\r\n    }\r\n    const updateInvestmentSubcategory = (val) => {\r\n        Object.keys(investmentList).forEach(key => {\r\n            if (key === val) {\r\n                setInvestemntSubCategory(investmentList[key])\r\n            }\r\n        });\r\n    }\r\n\r\n    const onTransactionType = (val) => {\r\n        if (transactionType.Income === val) {\r\n            setIncomeType(true);\r\n            setExpenseType(false);\r\n            setInvestmentType(false);\r\n        }\r\n        if (transactionType.Expense === val) {\r\n            setIncomeType(false);\r\n            setExpenseType(true);\r\n            setInvestmentType(false);\r\n        }\r\n        if (transactionType.Investment === val) {\r\n            setIncomeType(false);\r\n            setExpenseType(false);\r\n            setInvestmentType(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (updateRecord) {\r\n            reset({ ...updateRecord, transactionDate: updateRecord.transactionDate.split(\"T\")[0]});\r\n            onTransactionType(updateRecord.transactionType);\r\n            if (updateRecord.transactionType === transactionType.Expense) {\r\n                updateSubcategory(updateRecord.category)\r\n            }\r\n            if (updateRecord.transactionType === transactionType.Investment) {\r\n                updateInvestmentSubcategory(updateRecord.category)\r\n            }\r\n        }\r\n        if (deleteRecord) {\r\n            onDeleteRecord(deleteRecord);\r\n        }\r\n    }, [subCategory, incomeType, expenseType, investmentType, updateRecord, deleteRecord])\r\n\r\n    const onDeleteRecord = (data) => {\r\n        axios.delete(BASE_URL + \"/transaction/\" + data._id)\r\n            .then(function (response) {\r\n                console.log(\"Transaction deleted successfully = \" + response);\r\n                updateTransactionList(Math.random());\r\n            }).catch(function (error) {\r\n                console.log(\"Transaction failed = \" + error)\r\n            });\r\n    }\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(JSON.stringify(data));\r\n\r\n        if (!data._id) {\r\n            data.userId = localStorage.getItem('userId');\r\n            axios.post(BASE_URL + \"/transaction\", data)\r\n                .then(function (response) {\r\n                    console.log(\"Transaction added successfully = \" + response);\r\n                    reset({\r\n                        transactionType:\"\",\r\n                        category:\"\",\r\n                        subCategory:\"\",\r\n                        amount:\"\",\r\n                        transactionDate:\"\",\r\n                        comments:\"\",\r\n                    });\r\n                    updateTransactionList(Math.random());\r\n                }).catch(function (error) {\r\n                    console.log(\"Transaction failed = \" + error)\r\n                });\r\n        } else {\r\n            axios.put(BASE_URL + \"/transaction/\" + data._id, data)\r\n                .then(function (response) {\r\n                    console.log(\"Transaction added successfully = \" + response);\r\n                    reset({\r\n                        transactionType:\"\",\r\n                        category:\"\",\r\n                        subCategory:\"\",\r\n                        amount:\"\",\r\n                        transactionDate:\"\",\r\n                        comments:\"\",\r\n                    });\r\n                    updateTransactionList(Math.random());\r\n                }).catch(function (error) {\r\n                    console.log(\"Transaction failed = \" + error)\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)} className=\"bg-white mt-3 mb-4 p-4\">\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label for=\"transaction\">Transaction Type</label>\r\n                        <select id=\"transaction\" className=\"form-control\"\r\n                            {...register('transactionType', { required: true })}\r\n                            onChange={(e) => onTransactionType(e.target.value)}>\r\n                            {\r\n                                Object.keys(transactionType).map(key => <option value={transactionType[key]}>{key}</option>)\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    {\r\n                        incomeType &&\r\n                        <div className=\"form-group col-md-3\">\r\n                            <label for=\"income\">Income Type</label>\r\n                            <select id=\"income\" className=\"form-control\"  {...register('category', { required: true })}>\r\n                                {incomeList &&\r\n                                    incomeList.map(key =>\r\n                                        <option key={key} value={key} >{key}</option>\r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                    }\r\n                    {expenseType &&\r\n                        <>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label for=\"expense\">Expense Type(Main Category)</label>\r\n                                <select id=\"expense\" className=\"form-control\"\r\n                                    {...register('category', { required: true })} onChange={(e) => updateSubcategory(e.target.value)}>\r\n                                    {expenseList &&\r\n                                        Object.keys(expenseList).map(key =>\r\n                                            <option key={key} value={key} >{key}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label for=\"expense-sub\">Expense Type(Sub Category)</label>\r\n\r\n                                <select id=\"expense-sub\" className=\"form-control\"  {...register('subCategory', { required: false })}>\r\n                                    {subCategory &&\r\n                                        subCategory?.map((key) =>\r\n                                            <option key={key} value={key}>{key}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    {investmentType &&\r\n                        <>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label for=\"investment\">Investment Type(Main Category)</label>\r\n                                <select id=\"investment\" className=\"form-control\"\r\n                                    {...register('category', { required: true })}\r\n                                    onChange={(e) => updateInvestmentSubcategory(e.target.value)}\r\n                                >\r\n                                    {investmentList &&\r\n                                        Object.keys(investmentList).map(key =>\r\n                                            <option key={key} value={key} >{key}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group col-md-3\">\r\n                                <label for=\"investment-c\">Investment Type(Sub Category)</label>\r\n\r\n                                <select id=\"investment-c\" className=\"form-control\"  {...register('subCategory', { required: false })}>\r\n                                    {investemntSubCategory &&\r\n                                        investemntSubCategory.map((key) =>\r\n                                            <option key={key} value={key}>{key}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </>\r\n                    }\r\n\r\n                </div>\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label for=\"amount\">Amount</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"amount\"  {...register('amount', { required: true })} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label for=\"Date\">Date</label>\r\n                        <input type=\"date\" className=\"form-control\" id=\"Date\"  {...register('transactionDate', { required: true })} />\r\n                    </div>\r\n                    <div className=\"form-group col-md-3\">\r\n                        <label for=\"comments\">Comments</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"comments\" placeholder=\"shopping...\"  {...register('comments', { required: false })} />\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\">\r\n                    Save\r\n             {incomeType && \" Income\"}\r\n                    {expenseType && \" Expense\"}\r\n                    {investmentType && \" Investment\"}\r\n                </button>\r\n            </form>\r\n            <div className=\"modal fade show\" tabindex=\"-1\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Modal title</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <p>Modal body text goes here.</p>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { ExpenseRecords, TransactionRecords, IncomeRecords, InvestmentRecords } from '../components/transaction-records';\r\nimport { AddRecords } from \"../components/transaction-records/add-records\"\r\n\r\n\r\nexport const Expenses = () => {\r\n    const [parentCounter, setParentCounter] = useState();\r\n    const [deleteRecord, setDeleteRecord] = useState();\r\n    const [someKey, setSomeKey] = useState(1);\r\n    const month = new Date().getMonth();\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n    let monthName = monthNames[month];\r\n    const [showTabs, setShowTabs] = useState({\r\n        all: true,\r\n        expense: false,\r\n        income: false,\r\n        investment: false\r\n    })\r\n\r\n    const updatedTransaction = (val) => {\r\n        setSomeKey(val)\r\n    }\r\n\r\n    useEffect(() => {\r\n    }, [showTabs,parentCounter,deleteRecord,someKey])\r\n\r\n    const showRecords = (value) => {\r\n        switch (value) {\r\n            case 'all': setShowTabs({ all: true, expense: false, income:false, investment: false }); break;\r\n            case 'expense': setShowTabs({ all: false, expense: true, income:false, investment: false }); break;\r\n            case 'income': setShowTabs({ all: false, expense: false, income:true, investment: false }); break;\r\n            case 'investment': setShowTabs({ all: false, expense: false, income:false, investment: true }); break;\r\n            default: break;\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <AddRecords updateRecord={parentCounter} deleteRecord={deleteRecord}  updateTransactionList={updatedTransaction}></AddRecords>\r\n            <div className=\"bg-white p-4 mt-4 mb-4\">\r\n            <h4 className=\"mt-1\">\r\n                Transaction Details For - &nbsp;\r\n                {monthName}\r\n            </h4>\r\n            <nav className=\"nav nav-pills flex-column flex-sm-row mt-4\">\r\n                <span onClick={()=>showRecords('all')} className={\"flex-sm-fill text-sm-center nav-link \" + (showTabs.all ? 'active':'') } >All</span>\r\n                <span onClick={()=>showRecords('expense')} className={\"flex-sm-fill text-sm-center nav-link \" + (showTabs.expense ? 'active':'') }  >Expense</span>\r\n                <span onClick={()=>showRecords('income')} className={\"flex-sm-fill text-sm-center nav-link \" + (showTabs.income ? 'active':'') } >Income</span>\r\n                <span onClick={()=>showRecords('investment')} className={\"flex-sm-fill text-sm-center nav-link \" + (showTabs.investment ? 'active':'') } >Savings</span>\r\n            </nav>\r\n            <hr></hr>\r\n            <div>\r\n                {showTabs.all &&\r\n                    <TransactionRecords key={someKey} setParentCounter={setParentCounter} deleteTransaction={setDeleteRecord}></TransactionRecords>\r\n                }\r\n                {showTabs.expense &&\r\n                    <ExpenseRecords></ExpenseRecords>\r\n                }\r\n                {showTabs.income &&\r\n                    <IncomeRecords></IncomeRecords>\r\n                }\r\n                {showTabs.investment &&\r\n                    <InvestmentRecords></InvestmentRecords>\r\n                }\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Todo = () => {\r\n    return (\r\n        <div>\r\n            To do page\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\nimport { Dashboard } from \"../../pages/dashboard\";\r\nimport { Expenses } from '../../pages/expenses';\r\nimport { Todo } from '../../pages/todo';\r\n\r\n\r\nexport const Sidebar = () => {\r\n  const user = localStorage.getItem('user');\r\n  const [sideBarShow, setsideBarShow] = useState(false)\r\n  return (\r\n    <div className=\"row pos-r\">\r\n\r\n      <div className=\"col-12 sidebar-btn\"> <span onClick={() => setsideBarShow(!sideBarShow)} className=\"\"><i class=\"bi bi-justify mr-2\"></i>Menu</span></div>\r\n      {sideBarShow && \r\n      <div className=\"col-md-2 side-bar sidebar-m\">\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            <NavLink to=\"/dashboard\" activeClassName=\"active\" onClick={() => setsideBarShow(!sideBarShow)}>Dashboard</NavLink>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <NavLink to=\"/expenses\" activeClassName=\"active\" onClick={() => setsideBarShow(!sideBarShow)}>Transactions</NavLink>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <NavLink to=\"/todo\" activeClassName=\"active\" onClick={() => setsideBarShow(!sideBarShow)}>Todo</NavLink>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <NavLink to=\"/watch\" activeClassName=\"active\" onClick={() => setsideBarShow(!sideBarShow)}>Watch</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      }\r\n        <div className=\"col-md-2 side-bar sidebar-d\">\r\n              <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">\r\n                  <NavLink to=\"/dashboard\" activeClassName=\"active\">Dashboard</NavLink>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  <NavLink to=\"/expenses\" activeClassName=\"active\" >Transactions</NavLink>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  <NavLink to=\"/todo\" activeClassName=\"active\">Todo</NavLink>\r\n                </li>\r\n                <li className=\"list-group-item\">\r\n                  <NavLink to=\"/watch\" activeClassName=\"active\" >Watch</NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n      <div className=\"col-md-10 \">\r\n       \r\n        <Switch>\r\n          {user && <>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route path=\"/expenses\" component={Expenses} />\r\n          <Route path=\"/dashboard\" component={Dashboard} />\r\n          <Route path=\"/todo\" component={Todo} />\r\n          <Route path=\"/user\" component={Todo} />\r\n          <Route path=\"/\" render={() => (<Redirect to=\"/dashboard\" />)} />\r\n          </> }\r\n          {!user &&  <Redirect path=\"/login\" />}\r\n        </Switch>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport const Header = () => {\r\n    let history = useHistory();\r\n    const username = localStorage.getItem(\"username\");\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"userName\");\r\n        localStorage.removeItem(\"userId\");\r\n        history.push(\"/login\");\r\n        \r\n        console.log(\"hhh\")\r\n    }\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <nav className=\"navbar navbar-light bg-light\">\r\n                    <div className=\"container-fluid\">\r\n                        <span className=\"navbar-brand\">One-note : {username}</span>\r\n       \r\n                        {/* <form className=\"d-flex\">\r\n                            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                         \r\n                        </form> */}\r\n                        <button className=\"btn btn-outline-primary\" type=\"button\" onClick={logout}>Logout <i className=\"bi bi-arrow-right-circle\"></i></button>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm } from 'react-hook-form';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from './../environment/dev';\r\n\r\nexport const Login = () => {\r\n    let history = useHistory();\r\n    const [signIn, setSignIn] = useState(true);\r\n    const { register, formState: { errors }, handleSubmit, reset } = useForm();\r\n    const [error, setError] = useState(false);\r\n\r\n    const onSubmit = (data) => {\r\n        console.log(JSON.stringify(data));\r\n        axios.post(BASE_URL + \"/user\", data)\r\n            .then(function (response) {\r\n              \r\n                    console.log(\"Transaction added successfully = \" + response.data);\r\n                    localStorage.setItem(\"user\", response.data[0].email);\r\n                    localStorage.setItem(\"userId\", response.data[0]._id);\r\n                    localStorage.setItem(\"username\", response.data[0].firstName + \" \" + response.data[0].lastName);\r\n                    setTimeout(function () {\r\n                        history.push(\"/user\");\r\n                    }, 1000);\r\n                    reset();\r\n            }).catch(function (error) {\r\n                console.log(\"Transaction failed = \" + error)\r\n            })\r\n    };\r\n\r\n    const handleLogin = (data) => {\r\n        axios.post(BASE_URL + \"/user/login\", data)\r\n            .then(function (response) {\r\n                if (response.data.length > 0) {\r\n                console.log(\"Transaction added successfully = \" + response.data);\r\n                localStorage.setItem(\"user\", response.data[0].email);\r\n                localStorage.setItem(\"userId\", response.data[0]._id);\r\n                localStorage.setItem(\"username\", response.data[0].firstName + \" \" + response.data[0].lastName);\r\n                setTimeout(function () {\r\n                    history.push(\"/user\");\r\n                }, 1000);\r\n                reset();\r\n            } else {\r\n                setError(true);\r\n            }\r\n            }).catch(function (error) {\r\n                console.log(\"Transaction failed = \" + error)\r\n            })\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row  align-items-center justify-content-md-center\" style={{ height: \"100vh\" }}>\r\n                <div className=\"col-md-4 bg-white p-5 rounded\">\r\n                    {signIn &&\r\n                        <div className=\"signIn\">\r\n                            <h5 className=\"text-center\">One-Note - Sign In</h5>\r\n                            <form className=\"needs-validation\" onSubmit={handleSubmit(handleLogin)}>\r\n                                <div className=\"from-group mt-3\">\r\n                                    <label>Email</label>\r\n\r\n                                    <input className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        {...register(\"email\", {\r\n                                            required: true,\r\n                                            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                                        })}\r\n                                        required\r\n                                    />\r\n                                    {errors.email && <div className='invalid-feedback'>Email is required</div>}\r\n\r\n                                </div>\r\n                                <div className=\"from-group mt-3\">\r\n                                    <label>Password</label>\r\n                                    <input className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        {...register(\"password\", {\r\n                                            required: true,\r\n                                            maxLength: 11,\r\n                                            minLength: 8\r\n                                        })}\r\n                                        required\r\n                                    />\r\n                                    {errors.password && <div className='invalid-feedback'>Password is required</div>}\r\n                                    {error && <div className=\"pt-2 text-danger\">Invalid email or password</div>}\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Sign In\" className=\"btn btn-primary  mt-4\" />\r\n                            </form>\r\n                            <div className=\"mt-3\"> Don't have an Account <span onClick={() => setSignIn(false)} className=\"text-success cp u\"> Sign Up </span></div>\r\n                        </div>\r\n                    }\r\n                    {!signIn &&\r\n                        <div className=\"signup\">\r\n                            <h5 className=\"text-center\">One-Note - Sign Up</h5>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"from-group mt-3\">\r\n                                    <label>First name</label>\r\n                                    <input className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        {...register(\"firstName\", { required: true, maxLength: 80 })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"from-group mt-3\">\r\n                                    <label>Last name</label>\r\n                                    <input className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        {...register(\"lastName\", { required: true, maxLength: 100 })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"from-group mt-3\">\r\n                                    <label>Email</label>\r\n\r\n                                    <input className=\"form-control\"\r\n                                        type=\"text\"\r\n                                        {...register(\"email\", {\r\n                                            required: true,\r\n                                            pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"from-group mt-3\">\r\n                                    <label>Password</label>\r\n                                    <input className=\"form-control\"\r\n                                        type=\"password\"\r\n                                        {...register(\"password\", {\r\n                                            required: true,\r\n                                            maxLength: 11,\r\n                                            minLength: 8\r\n                                        })}\r\n                                    />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Sign Up\" className=\"btn btn-primary  mt-4\" />\r\n                            </form>\r\n                            <div className=\"mt-3\"> Already have an account <span onClick={() => setSignIn(true)} className=\"text-danger cp u\"> Sign In</span></div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Sidebar } from \"../components/sidebar/sidebar\";\r\nimport { Header } from \"./../components/header/header\";\r\nimport { Login } from \"./login\";\r\n\r\nexport const User = () => {\r\n  const user = localStorage.getItem('user');\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      { user &&\r\n           <>\r\n          <Header></Header>\r\n          <Sidebar></Sidebar>\r\n          </>\r\n      }\r\n      { !user && \r\n         <Redirect to=\"/login\" />\r\n      }\r\n   \r\n    </div>\r\n  );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { User } from './layouts/user';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { Login } from './layouts/login';\n\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Router>\n        <switch>\n        <Route path=\"/\" component={User} /> \n        <Route path=\"/user\" component={User} /> \n        <Route path=\"/login\" component={Login} />\n        <Route path=\"*\" render={() => (<Redirect to=\"/user\" />)} />\n        </switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}